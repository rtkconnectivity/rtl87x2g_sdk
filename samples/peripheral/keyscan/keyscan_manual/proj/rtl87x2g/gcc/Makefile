##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.5.2] date: [Fri Nov 29 15:56:19 CST 2019]
##########################################################################################################################
# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
# 2019-02-01 - first version
# ------------------------------------------------
######################################
# target
######################################
TARGET = app
######################################
# building variables
######################################
# debug build?
DEBUG = 0
# optimization
#OPT = -Og
OPT = -O1
#######################################
# paths
#######################################
# Build path
BUILD_DIR = build
BIN_DIR = bin
######################################
# source
######################################
# C sources
C_SOURCES =  \
../../../../../../../bsp/boot/rtl87x2g/startup_rtl.c \
../../../../../../../bsp/boot/rtl87x2g/system_rtl.c \
../../../../../../../bsp/driver/rcc/src/rtl87x2g/rtl_rcc.c \
../../../../../../../bsp/driver/pinmux/src/rtl87x2g/rtl_pinmux.c \
../../../../../../../bsp/driver/gpio/src/rtl_common/rtl_gpio.c \
../../../../../../../bsp/driver/keyscan/src/rtl_common/rtl_keyscan.c \
../../../../../../../bsp/driver/nvic/src/rtl87x2g/rtl_nvic.c \
../../../src/io_keyscan.c \
../../../src/main_ns.c \
# sources END
# ASM sources
# ASM_SOURCES = ../../../../src/mcu/rtl876x/arm/startup_rtl876x_gcc.s
#startup_rtl8762c_ARMCC.s
#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
OD = $(PREFIX)objdump
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################
# cpu
CPU = -march=armv8.1-m.main+dsp+mve+fp

# fpu
FPU =

# float-abi
FLOAT-ABI = -mfloat-abi=hard
#FLOAT-ABI = -mfloat-abi=soft

# mcu
MCU = $(CPU) -mthumb  $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS =

# C defines
C_DEFS =


# AS includes
AS_INCLUDES = \

# C includes

C_INCLUDES =  \
-I../../../../../../../subsys/osif/freertos \
-I../../../../../../../subsys/osif/inc \
-I../../../../../../../include/rtl87x2g \
-I../../../../../../../include/rtl87x2g/config \
-I../../../../../../../include/rtl87x2g/nsc \
-I../../../../../../../include/rtl87x2g/cmsis/Core/Include \
-I../../../../../../../bsp/driver \
-I../../../../../../../bsp/driver/adc/inc \
-I../../../../../../../bsp/driver/can/inc \
-I../../../../../../../bsp/driver/codec/src/rtl87x2g \
-I../../../../../../../bsp/driver/dma/inc \
-I../../../../../../../bsp/driver/ethernet/inc \
-I../../../../../../../bsp/driver/gpio/inc \
-I../../../../../../../bsp/driver/i2c/inc \
-I../../../../../../../bsp/driver/i2s/inc \
-I../../../../../../../bsp/driver/imdc/inc \
-I../../../../../../../bsp/driver/ir/inc \
-I../../../../../../../bsp/driver/iso7816/inc \
-I../../../../../../../bsp/driver/keyscan/inc \
-I../../../../../../../bsp/driver/lcdc/inc \
-I../../../../../../../bsp/driver/lpc/inc \
-I../../../../../../../bsp/driver/mipi/inc \
-I../../../../../../../bsp/driver/nvic/inc \
-I../../../../../../../bsp/driver/pinmux/inc \
-I../../../../../../../bsp/driver/ppe/inc \
-I../../../../../../../bsp/driver/qdec/inc \
-I../../../../../../../bsp/driver/rcc/inc \
-I../../../../../../../bsp/driver/rtc/inc \
-I../../../../../../../bsp/driver/segcom/inc \
-I../../../../../../../bsp/driver/sleep_led/inc \
-I../../../../../../../bsp/driver/spi/inc \
-I../../../../../../../bsp/driver/spi3w/inc \
-I../../../../../../../bsp/driver/tim/inc \
-I../../../../../../../bsp/driver/uart/inc \
-I../../../../../../../bsp/driver/wdt/inc \
-I../../rtl87x2g \
-I../../../../../../../bsp/sdk_lib/inc \
-I../../../src \
# includes END
#C_PRE_INCLUDES

PER_INCLUDE=  \
#PRE_INCLUDES END

#C_PER_DEFINE

PER_DEFINE=  \
-D CONFIG_SOC_SERIES_RTL87X2G \
#PER_DEFINE END

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) -specs=nano.specs $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

CFLAGS += -std=c99 
# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"
# perinclude 
ifneq ($(PER_INCLUDE), )
CFLAGS +=$(PER_INCLUDE)
endif
ifneq ($(PER_DEFINE), )
CFLAGS +=$(PER_DEFINE)
endif
#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = app.ld.gen


LIBS = -lc -lm -lnosys
# libraries

LIBDIR = \
../../../../../../../bin/rtl87x2g/rom_lib/ROM_CMSE_Lib.o\
../../../../../../../bin/rtl87x2g/rom_lib/libROM_NS.a\
../../../../../../../bin/rtl87x2g/rom_lib/liblowerstack.a\
../../../../../../../bsp/sdk_lib/lib/rtl87x2g/gcc/librtl87x2g_sdk.a \
../../../../../../../bsp/driver/driver_lib/lib/rtl87x2g/gcc/librtl87x2g_io.a \
# lib_end

LDFLAGS = $(MCU) -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--no-warn-rwx-segments,--gc-sections  -specs=nano.specs

# default action: build all
.PHONY : all rm_app_bin
all : rm_app_bin version.h $(BUILD_DIR)/$(TARGET).elf $(BIN_DIR)/$(TARGET).bin $(BIN_DIR)/$(TARGET).trace 
	"../../../../../../../tools/prepend_header/prepend_header.exe" -t app_code -b 15 -p bin/$(TARGET).bin -m 1 -i "../mp.ini" -r ../../../../../../../tools/keys/rtk_ecdsa.pem -a ../../../../../../../tools/keys/key.json --aesmode CTR
	../../../../../../../tools/md5/md5.exe bin/$(TARGET)_MP.bin
	$(OD) -D -S build/$(TARGET).elf > bin/$(TARGET).dis 
#	$(CC) -o all $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
mem_define.ld :
	../../../../../../../tools/MemDefine/MemDefine.exe --flashmap ../../../../../../../include/rtl87x2g/config/flash_map.h --memconfig ../../../../../../../include/rtl87x2g/config/mem_config.h
version.h :
#	../../../../../../../tools/version_generation/version_gen_config.sh

# Remove the old app.bin to allow MAKE to regenerate app.bin from the elf file, 
# ensuring that the app.bin passed to the prepend_header script is plain-text.
rm_app_bin:
	rm -rf $(BIN_DIR)/$(TARGET).bin
#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
#vpath %.c $(sort $(dir $(C_SOURCES)))
vpath %.c  $(dir $(C_SOURCES))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(LDSCRIPT):
	$(CC) -E -P -x c -I$(C_INCLUDES) $(basename $@) -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile  | $(LDSCRIPT)
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BIN_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BIN_DIR)
	$(BIN) $< $@ --remove-section=App.trace

$(BIN_DIR)/%.trace: $(BUILD_DIR)/%.elf | $(BIN_DIR)
	$(BIN) $< $@ --only-section=App.trace

$(BUILD_DIR):
	mkdir $@

$(BIN_DIR):
	mkdir $@

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
	-rm -fR $(BIN_DIR)
	-rm -f  $(LDSCRIPT)
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***